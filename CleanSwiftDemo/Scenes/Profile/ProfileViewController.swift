//
//  ProfileViewController.swift
//  CleanSwiftDemo
//
//  Created by Tony Mak on 06/03/2020.
//  Copyright (c) 2020 Tony Mak. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileDisplayLogic: class {
    func displayInitView(viewModel: Profile.InitView.ViewModel)
}

class ProfileViewController: UIViewController, ProfileDisplayLogic {
    @IBOutlet weak var navBar: UINavigationBar!
    @IBOutlet weak var profileImg: UIImageView!
    @IBOutlet weak var nameLbl: UILabel!
    @IBOutlet weak var profileTbl: UITableView!
    
    var interactor: ProfileBusinessLogic?
    var router: (NSObjectProtocol & ProfileRoutingLogic & ProfileDataPassing)?
    
    var profileList = [Profile.InitView.ViewModelProfileItem]() {
        didSet {
            profileTbl.reloadData()
        }
    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        
        profileTbl.register(UINib(nibName: "ProfileTableViewCell", bundle: nil), forCellReuseIdentifier: "ProfileTableViewCell")
        interactor?.requestInitView(request: Profile.InitView.Request())
    }
  
    func displayInitView(viewModel: Profile.InitView.ViewModel) {
        navBar.topItem?.title = viewModel.navTitle
        profileImg.image = UIImage()//No image, just show background colour
        nameLbl.text = viewModel.name
        profileList = viewModel.profileList
    }
    
    @IBAction func buttonDidPress(_ sender: Any) {
        //Push to other scene
        router?.routeToEditProfile()
    }
}

extension ProfileViewController: UITableViewDelegate {
}

extension ProfileViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return profileList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "ProfileTableViewCell", for: indexPath) as! ProfileTableViewCell
        let item = profileList[indexPath.row]
        
        cell.titleLbl.text = item.title
        cell.valueLbl.text = item.value
        
        return cell
    }
}
